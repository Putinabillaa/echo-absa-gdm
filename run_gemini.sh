#!/bin/bash

MODEL="gemini-2.0-flash"

# Base directories
CORPUS_DIR="/Users/putinabillaaidira/Downloads/KULIAH/TA/echo-absa-gdm/data/corpus_final/for_absa"
ASPECT_DIR="$CORPUS_DIR/aspect_list"
GOLD_DIR="/Users/putinabillaaidira/Downloads/KULIAH/TA/echo-absa-gdm/data/labeled/for_absa"
RESULTS_DIR="/Users/putinabillaaidira/Downloads/KULIAH/TA/echo-absa-gdm/absa/results"
GEMINI_OUTPUT_DIR="$RESULTS_DIR/gemini/$MODEL"
METRICS_OUTPUT_DIR="$RESULTS_DIR/metrics/gemini/$MODEL"

CONF_THRESHOLDS="0.2,0.4,0.6,0.8,1.0"
BATCH_SIZE=30

mkdir -p "$GEMINI_OUTPUT_DIR"
mkdir -p "$METRICS_OUTPUT_DIR"

# Create a timestamp folder for this run
TIMESTAMP=$(date +%Y%m%d_%H%M%S)

# Create timestamped output folders
GEMINI_TIMESTAMP_DIR="$GEMINI_OUTPUT_DIR/$TIMESTAMP"
METRICS_TIMESTAMP_DIR="$METRICS_OUTPUT_DIR/$TIMESTAMP"

mkdir -p "$GEMINI_TIMESTAMP_DIR"
mkdir -p "$METRICS_TIMESTAMP_DIR"

# Loop over corpus files (exclude aspect_list folder)
for corpus_file in "$CORPUS_DIR"/*.csv; do
    # Skip if the file is in aspect_list folder (should not happen because of path, but just in case)
    if [[ "$corpus_file" == *"aspect_list"* ]]; then
        continue
    fi

    base_filename=$(basename "$corpus_file" .csv)
    echo "Processing corpus: $base_filename"

    aspect_file="$ASPECT_DIR/${base_filename}.csv"
    gold_file="$GOLD_DIR/${base_filename}.csv"

    # Run gemini once per corpus file, handle all thresholds inside Python script
    echo "Running gemini for all thresholds: $CONF_THRESHOLDS"
    gemini --input "$corpus_file" \
        --aspects "$aspect_file" \
        --output "$GEMINI_TIMESTAMP_DIR" \
        --mode block \
        --batch_size $BATCH_SIZE \
        --conf_thresholds "$CONF_THRESHOLDS" \
        --model "$MODEL"

    # Now for each threshold, find the output file and run metric_calc
    for conf in ${CONF_THRESHOLDS//,/ }; do
        # Threshold format: remove decimal point, e.g., 0.6 -> 06
        conf_str=${conf//./}
        # Find the output file generated by the Python script matching this threshold
        output_file=$(ls "$GEMINI_TIMESTAMP_DIR/${base_filename}_${conf_str}_"*.csv 2>/dev/null | head -n 1)

        if [[ -f "$output_file" ]]; then
            echo "Calculating metrics for conf_threshold=$conf"
            metric_calc --pred "$output_file" \
                        --gold "$gold_file" \
                        --output "$METRICS_TIMESTAMP_DIR/${base_filename}_${conf_str}_metrics.txt"
        else
            echo "⚠️ Warning: Output file for threshold $conf not found!"
        fi
    done
    echo "Done processing $base_filename"
done

echo "All done."
